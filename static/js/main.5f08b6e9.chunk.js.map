{"version":3,"sources":["database/firebase.js","component/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["database","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","background","justifyContent","width","margin","form","padding","textAlign","Todo","prop","classes","useState","open","setOpen","updateTask","setUpdateTask","Modal","onClose","aria-labelledby","aria-describedby","className","Input","value","onChange","e","target","Button","disabled","variant","color","onClick","preventDefault","collection","doc","id","set","merge","data","event","delete","App","task","setTask","input","setInput","useEffect","orderBy","onSnapshot","snapshot","docs","map","add","FieldValue","serverTimestamp","t","index","todo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f08b6e9.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDdXos1lpc1gaWB_L53toBas5709s-mwpY\",\r\n    authDomain: \"todo-app-abaf0.firebaseapp.com\",\r\n    projectId: \"todo-app-abaf0\",\r\n    storageBucket: \"todo-app-abaf0.appspot.com\",\r\n    messagingSenderId: \"580206876894\",\r\n    appId: \"1:580206876894:web:e2a54fe1ae033e160f8a4f\"\r\n  };\r\n\r\nconst auth = firebase.initializeApp(firebaseConfig);\r\n\r\nconst database = auth.firestore();\r\n\r\nexport default database;","import React, { useState } from 'react';\r\nimport database from '../database/firebase';\r\nimport { Input, Button, Modal, Container, CssBaseline, makeStyles, Avatar, TextField, Typography, Box } from '@material-ui/core';\r\nimport EditOutlined from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(2),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      background: '#fff',\r\n      justifyContent: 'center',\r\n      width:'50%',\r\n      margin:'0 auto'\r\n     },\r\n    form: {\r\n      width: '70%', // Fix IE 11 issue.\r\n      margin: '0 auto',\r\n      padding: '50px',\r\n      textAlign: 'center',\r\n      justifyContent: 'space-around',\r\n      display: 'flex'\r\n    }\r\n  }));\r\n\r\n  \r\nfunction Todo(prop) {\r\n    const classes = useStyles();\r\n    const [open,setOpen] = useState(false);\r\n    const [updateTask,setUpdateTask] = useState(false);\r\n    //Edit Task Functionality\r\n    function handleTaskEdit(e) {\r\n        e.preventDefault();\r\n        setUpdateTask('');\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleTaskUpdate(e) {\r\n        e.preventDefault();\r\n        database.collection('todo').doc(prop.id).set({\r\n            \"todo\" : updateTask            \r\n        },{merge:true})\r\n        setOpen(false);\r\n    }\r\n    return (\r\n        <>\r\n        <Modal\r\n            open={open}    \r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            >\r\n            {\r\n            <div className={classes.paper}>\r\n            <form className={classes.form}>\r\n            <Input  value={updateTask} onChange={(e)=>setUpdateTask(e.target.value)}/>\r\n            <Button disabled={!updateTask} variant=\"contained\" color=\"primary\" onClick={handleTaskUpdate}>Update</Button>\r\n            </form>\r\n            </div>\r\n            }\r\n            </Modal>\r\n        <li className=\"todo__li\" id={`todo__li__${prop.id}`}>\r\n            <span className=\"todo__li__span\" >{prop.data}</span>\r\n            <span><Button onClick={handleTaskEdit}><EditOutlined color=\"primary\" /></Button></span>\r\n            <span><Button onClick={(event) => {\r\n                database.collection('todo').doc(prop.id).delete()\r\n            }}><DeleteOutlined color=\"secondary\"/></Button></span>\r\n        </li>\r\n            </>\r\n    );\r\n}\r\nexport default Todo;","import React, { useEffect, useState } from 'react';\nimport database from './database/firebase';\nimport firebase from 'firebase';\nimport Todo from './component/Todo';\nimport {Input,Button} from '@material-ui/core';\nimport './App.css';\nfunction App() {\n  const [task, setTask] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect(()=>{\n    database.collection('todo').orderBy('timestamps','desc').onSnapshot((snapshot)=>{\n      setTask(snapshot.docs.map((doc)=>{ return {\"data\" : doc.data(), \"id\" : doc.id};}));\n    })\n\n  },[]);\n  \n  \n  const handleTodo = (e)=>{\n    e.preventDefault();\n    // Add the task Data to the List\n    /*     setTask([...task, input]);\n    */\n   // Add data to the firebase collections\n   database.collection('todo').add({\n     \"todo\" : input,\n     \"timestamps\" : firebase.firestore.FieldValue.serverTimestamp(),\n     \"status\": \"\"  \n    },{merge:true});\n    setInput('');\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <h1>\n          Todo App With ReactJs\n        </h1>\n        {/* \n            Creating a todo app\n            \n            -- adding form consisting a text box and a button\n            -- on button click the text should get added to the list \n            -- display all the todo list data (if any)\n            -- edit and delete functionality for each list data \n            \n            -- Designing with Material Ui \n            -- Integrate firebase\n            \n          */}\n      </header>\n      <div className=\"todo__main__div\">\n        <div className=\"todo__Form\">\n            <form>\n              <Input value ={input} onChange={e => setInput(e.target.value)}/>\n              <Button disabled={!input}  variant=\"contained\" onClick={handleTodo}>Add Todo</Button>\n            </form>\n        </div>\n        <ul className=\"todo__ul\">\n          {/* Create A Separate COmponent FOr Looping Through List */}     \n          {task.map((t,index)=>{\n            return <Todo data={t.data.todo} id={t.id} key={index} />\n          })}\n        </ul>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}