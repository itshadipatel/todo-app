{"version":3,"sources":["database/firebase.js","component/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["database","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Todo","prop","useState","open","setOpen","updateTask","setUpdateTask","Modal","onClose","aria-labelledby","aria-describedby","value","onChange","e","target","onClick","preventDefault","collection","doc","id","set","merge","className","data","Button","event","delete","App","task","setTask","input","setInput","useEffect","orderBy","onSnapshot","snapshot","docs","map","add","FieldValue","serverTimestamp","t","index","todo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAceA,EAJFC,IAASC,cATC,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKWC,Y,kDCoCPC,MA3Cf,SAAcC,GAAO,IAAD,EACOC,oBAAS,GADhB,mBACTC,EADS,KACJC,EADI,OAEmBF,oBAAS,GAF5B,mBAETG,EAFS,KAEEC,EAFF,KAiBhB,OACI,qCACA,cAACC,EAAA,EAAD,CACIJ,KAAMA,EACNK,QAAS,WAAKJ,GAAQ,IACtBK,kBAAgB,qBAChBC,mBAAiB,2BAJrB,SAOQ,iCACI,uBAAOC,MAAON,EAAYO,SAAU,SAACC,GAAD,OAAKP,EAAcO,EAAEC,OAAOH,UAChE,wBAAQI,QAlBxB,SAA0BF,GACtBA,EAAEG,iBACF1B,EAAS2B,WAAW,QAAQC,IAAIjB,EAAKkB,IAAIC,IAAI,CACzC,KAASf,GACX,CAACgB,OAAM,IACTjB,GAAQ,IAaI,yBAKZ,qBAAIkB,UAAU,WAAWH,GAAE,oBAAelB,EAAKkB,IAA/C,UACI,+BAAOlB,EAAKsB,OACZ,+BAAM,cAACC,EAAA,EAAD,CAAQT,QA/BtB,SAAwBF,GACpBA,EAAEG,iBACFV,EAAc,IACdF,GAAQ,IA4BE,SAAiC,cAAC,IAAD,QACvC,+BAAM,cAACoB,EAAA,EAAD,CAAQT,QAAS,SAACU,GACpBnC,EAAS2B,WAAW,QAAQC,IAAIjB,EAAKkB,IAAIO,UADvC,SAEH,cAAC,IAAD,eC0BAC,MAhEf,WAAgB,IAAD,EACWzB,mBAAS,IADpB,mBACN0B,EADM,KACAC,EADA,OAEa3B,mBAAS,IAFtB,mBAEN4B,EAFM,KAECC,EAFD,KAyBb,OArBAC,qBAAU,WACR1C,EAAS2B,WAAW,QAAQgB,QAAQ,aAAa,QAAQC,YAAW,SAACC,GACnEN,EAAQM,EAASC,KAAKC,KAAI,SAACnB,GAAQ,MAAO,CAAC,KAASA,EAAIK,OAAQ,GAAOL,EAAIC,aAG7E,IAiBA,sBAAKG,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SAEE,yDAgBF,sBAAKA,UAAU,GAAf,UACE,qBAAKA,UAAU,aAAf,SACI,iCACE,uBAAOX,MAAQmB,EAAOlB,SAAU,SAAAC,GAAC,OAAIkB,EAASlB,EAAEC,OAAOH,UACvD,wBAAQI,QArCD,SAACF,GAClBA,EAAEG,iBAKH1B,EAAS2B,WAAW,QAAQqB,IAAI,CAC9B,KAASR,EACT,WAAevC,IAASQ,UAAUwC,WAAWC,kBAC7C,OAAU,IACT,CAACnB,OAAM,IACTU,EAAS,KA0BC,2BAGN,oBAAIT,UAAU,WAAd,SAEGM,EAAKS,KAAI,SAACI,EAAEC,GACX,OAAO,cAAC,EAAD,CAAMnB,KAAMkB,EAAElB,KAAKoB,KAAMxB,GAAIsB,EAAEtB,IAASuB,eChD5CE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f72ffc7f.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDdXos1lpc1gaWB_L53toBas5709s-mwpY\",\r\n    authDomain: \"todo-app-abaf0.firebaseapp.com\",\r\n    projectId: \"todo-app-abaf0\",\r\n    storageBucket: \"todo-app-abaf0.appspot.com\",\r\n    messagingSenderId: \"580206876894\",\r\n    appId: \"1:580206876894:web:e2a54fe1ae033e160f8a4f\"\r\n  };\r\n\r\nconst auth = firebase.initializeApp(firebaseConfig);\r\n\r\nconst database = auth.firestore();\r\n\r\nexport default database;","import React, { useState } from 'react';\r\nimport database from '../database/firebase';\r\nimport { Button, Modal } from '@material-ui/core';\r\nimport EditOutlined from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined';\r\nfunction Todo(prop) {\r\n    const [open,setOpen] = useState(false);\r\n    const [updateTask,setUpdateTask] = useState(false);\r\n    //Edit Task Functionality\r\n    function handleTaskEdit(e) {\r\n        e.preventDefault();\r\n        setUpdateTask('');\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleTaskUpdate(e) {\r\n        e.preventDefault();\r\n        database.collection('todo').doc(prop.id).set({\r\n            \"todo\" : updateTask            \r\n        },{merge:true})\r\n        setOpen(false);\r\n    }\r\n    return (\r\n        <>\r\n        <Modal\r\n            open={open}    \r\n            onClose={()=>{setOpen(false)}}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            >\r\n            {\r\n                <form>\r\n                    <input value={updateTask} onChange={(e)=>setUpdateTask(e.target.value)}/>\r\n                    <button onClick={handleTaskUpdate}>Update</button>\r\n                </form>\r\n\r\n            }\r\n            </Modal>\r\n        <li className=\"todo__li\" id={`todo__li__${prop.id}`}>\r\n            <span>{prop.data}</span>\r\n            <span><Button onClick={handleTaskEdit}><EditOutlined /></Button></span>\r\n            <span><Button onClick={(event) => {\r\n                database.collection('todo').doc(prop.id).delete()\r\n            }}><DeleteOutlined /></Button></span>\r\n        </li>\r\n            </>\r\n    );\r\n}\r\nexport default Todo;","import React, { useEffect, useState } from 'react';\nimport database from './database/firebase';\nimport firebase from 'firebase';\nimport Todo from './component/Todo';\n\nfunction App() {\n  const [task, setTask] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect(()=>{\n    database.collection('todo').orderBy('timestamps','desc').onSnapshot((snapshot)=>{\n      setTask(snapshot.docs.map((doc)=>{ return {\"data\" : doc.data(), \"id\" : doc.id};}));\n    })\n\n  },[]);\n  \n  \n  const handleTodo = (e)=>{\n    e.preventDefault();\n    // Add the task Data to the List\n    /*     setTask([...task, input]);\n    */\n   // Add data to the firebase collections\n   database.collection('todo').add({\n     \"todo\" : input,\n     \"timestamps\" : firebase.firestore.FieldValue.serverTimestamp(),\n     \"status\": \"\"  \n    },{merge:true});\n    setInput('');\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <h1>\n          Todo App With ReactJs\n        </h1>\n        {/* \n            Creating a todo app\n            \n            -- adding form consisting a text box and a button\n            -- on button click the text should get added to the list \n            -- display all the todo list data (if any)\n            -- edit and delete functionality for each list data \n            \n            -- Designing with Material Ui \n            -- Integrate firebase\n            \n          */}\n      </header>\n      <div className=\"\">\n        <div className=\"todo__Form\">\n            <form>\n              <input value ={input} onChange={e => setInput(e.target.value)}/>\n              <button onClick={handleTodo}>Add Todo</button>\n            </form>\n        </div>\n        <ul className=\"todo__ul\">\n          {/* Create A Separate COmponent FOr Looping Through List */}     \n          {task.map((t,index)=>{\n            return <Todo data={t.data.todo} id={t.id} key={index} />\n          })}\n        </ul>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}